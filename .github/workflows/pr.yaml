name: Pull Request Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  playwright-ts-test:
    name: Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: './playwright-test/.nvmrc'

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./playwright-test

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install Playwright
        shell: bash
        working-directory: ./playwright-test
        run: npx playwright install
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright dependencies
        shell: bash
        working-directory: ./playwright-test
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Test desktop:chrome
        shell: bash
        working-directory: ./playwright-test
        run: time npm run test:desktop:chrome

  codeceptjs-ts-test:
    name: CodeceptJS + Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: './codeceptjs-ts-test/.nvmrc'

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./codeceptjs-ts-test

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install Playwright
        shell: bash
        working-directory: ./codeceptjs-ts-test
        run: npx playwright install
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright dependencies
        shell: bash
        working-directory: ./codeceptjs-ts-test
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Test desktop:chrome
        shell: bash
        working-directory: ./codeceptjs-ts-test
        run: time npm run test:desktop:chrome:workers

  cleanup:
    runs-on: ubuntu-latest
    steps:      
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH -L 100 | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              echo $cacheKey
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: refs/pull/${{ github.event.pull_request.number }}/merge